{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","monster","name","src","id","title","email","CardList","monsters","map","SearchBox","placeholder","handleSearchChange","type","onChange","App","onSearch","event","setState","searchField","target","value","console","log","state","fetch","then","response","json","users","this","filteredMonsters","filter","toLowerCase","includes","trim","React","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iUAaeA,EAVK,SAACC,GACjB,OACI,sBAAKC,UAAU,iBAAf,UACA,qBAAKC,IAAKF,EAAMG,QAAQC,KAAMC,IAAG,+BAA0BL,EAAMG,QAAQG,GAAxC,0BAAoEC,MAAOP,EAAMG,QAAQC,OAC1H,6BAAKJ,EAAMG,QAAQC,OACnB,4BAAIJ,EAAMG,QAAQK,YCOXC,EAVS,SAACT,GACrB,OACI,qBAAKC,UAAU,YAAf,SACCD,EAAMU,SAASC,KAAI,SAACR,GACjB,OAAO,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQG,UCOvBM,G,MAbU,SAAC,GAAyC,IAAvCC,EAAsC,EAAtCA,YAAaC,EAAyB,EAAzBA,mBAIrC,OACI,8BACI,uBAAOC,KAAK,SAASX,KAAK,iBAAiBE,GAAG,aAAaO,YAAaA,EAAaZ,UAAU,aAC3Fe,SAAUF,QC6CXG,G,wDA9Cb,WAAYjB,GAAQ,IAAD,8BACjB,cAAMA,IAaRkB,SAAW,SAACC,GACV,OAAO,EAAKC,SAAS,CAAEC,YAAaF,EAAMG,OAAOC,QAAS,kBAAMC,QAAQC,IAAI,EAAKC,WAbjF,EAAKA,MAAQ,CACXhB,SAAU,GACVW,YAAa,IAJE,E,qDAkBnB,WAAqB,IAAD,OAClBM,MAAM,8CAA8CC,MAAK,SAACC,GACxD,OAAOA,EAASC,UACfF,MAAK,SAACG,GACP,OAAO,EAAKX,SAAS,CAAEV,SAAUqB,S,oBAIrC,WAAS,MAE2BC,KAAKN,MAA/BhB,EAFD,EAECA,SAAUW,EAFX,EAEWA,YACZY,EAAmBvB,EAASwB,QAAO,SAAC/B,GACxC,OAAOA,EAAQC,KAAK+B,cAAcC,SAASf,EAAYc,cAAcE,WAEvE,OACE,sBAAKpC,UAAU,MAAf,UACA,oBAAIA,UAAU,eAAd,6BACE,cAAC,EAAD,CAAWS,SAAUuB,EAAkBpB,YAAY,iBAAiBC,mBAAoBkB,KAAKd,WAE7F,cAAC,EAAD,CAAUR,SAAUuB,W,GAvCVK,IAAMC,YCKTC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBd,MAAK,YAAkD,IAA/Ce,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.9a4e307c.chunk.js","sourcesContent":["import React from 'react';\r\nimport '../card/card.styles.css';\r\n\r\nexport const Card = (props) => {\r\n    return(\r\n        <div className=\"card-container\">\r\n        <img alt={props.monster.name} src={`https://robohash.org/${props.monster.id}?set=set2&size=180x180`} title={props.monster.name}/>\r\n        <h1>{props.monster.name}</h1>\r\n        <p>{props.monster.email}</p>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Card;","import React from 'react';\r\nimport './card-list.styles.css';\r\nimport Card from '../card/card.component';\r\n\r\n\r\nexport const CardList = (props) => {\r\n    return (\r\n        <div className=\"card-list\">\r\n        {props.monsters.map((monster) => {\r\n            return <Card key={monster.id} monster={monster}></Card>\r\n        })}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CardList;","import React from 'react';\r\nimport './search-box.styles.css';\r\n\r\nexport const SearchBox = ({ placeholder, handleSearchChange }) => {\r\n    // Functions components do not have access to \"constructor(as they r not class as they r functions), state(they dont have internal state) and LifeCycle methods\"\r\n    // Sometime we just want to receive props and return some jsx in such cases we use Fun. Components\r\n\r\n    return (\r\n        <div>\r\n            <input type=\"search\" name=\"search-monster\" id=\"search-box\" placeholder={placeholder} className=\"search-box\"\r\n                onChange={handleSearchChange} />\r\n        </div>\r\n    );\r\n\r\n};\r\n\r\nexport default SearchBox;","import React from 'react';\n\nimport CardList from './components/card-list/card-list.component';\nimport SearchBox from './components/search-box/search-box.component';\nimport './App.css';\n\n\nclass App extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      monsters: [],\n      searchField: '',\n    };\n\n    // this.onSearch = this.onSearch.bind(this);\n  };\n\n  // onSearch(event) {\n  //   return this.setState({ searchField: event.target.value }, () => console.log(this.state));\n  // }\n\n  onSearch = (event) => {\n    return this.setState({ searchField: event.target.value }, () => console.log(this.state));\n  }\n\n  componentDidMount() {\n    fetch('https://jsonplaceholder.typicode.com/users').then((response) => {\n      return response.json();\n    }).then((users) => {\n      return this.setState({ monsters: users });\n    })\n  };\n\n  render() {\n    // Instead of directly modifying our state value we r storing it for our search use\n    const { monsters, searchField } = this.state;\n    const filteredMonsters = monsters.filter((monster) => {\n      return monster.name.toLowerCase().includes(searchField.toLowerCase().trim());\n    });\n    return (\n      <div className=\"App\">\n      <h1 className=\"main-heading\">Monster Rolodex</h1>\n        <SearchBox monsters={filteredMonsters} placeholder=\"Search here...\" handleSearchChange={this.onSearch}>\n        </SearchBox>\n        <CardList monsters={filteredMonsters}>\n        </CardList>\n\n      </div>\n    );\n  };\n\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}